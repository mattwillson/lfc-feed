{"version":3,"sources":["components/MenuIcon.tsx","components/Title.tsx","components/ThemeSwitch.tsx","components/Header.tsx","api/youtube.tsx","components/VideoEmbed.tsx","components/VideoInfo.tsx","components/FeedModal.tsx","components/FeedItem.tsx","components/Feed.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["MenuIcon","react_default","a","createElement","className","MenuRounded_default","Title","href","target","ThemeSwitch","Switch","Header","Container","src_components_MenuIcon","src_components_Title","components_ThemeSwitch","axios","create","baseURL","params","key","process","VideoEmbed","_ref","videoId","YouTubeIframe","load","YT","console","log","Player","ResponsiveEmbed","aspectRatio","id","title","src","concat","allowFullScreen","VideoInfo","views","likes","dislikes","video","addCommas","x","toString","replace","snippet","ProgressBar","now","dateTime","publishedAt","moment","format","fromNow","FeedModal","show","onHide","Modal","dialogClassName","centered","restoreFocus","Body","components_VideoEmbed","src_components_VideoInfo","FeedItem","_useState","useState","_useState2","Object","slicedToArray","imageShow","setImageShow","_useState3","_useState4","videoShow","setVideoShow","_useState5","_useState6","modalShow","setModalShow","_useState7","_useState8","setViews","_useState9","_useState10","setLikes","_useState11","_useState12","setDislikes","mql","window","matchMedia","getVideoStats","_ref2","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","youtube","get","playlistId","part","sent","data","items","statistics","viewCount","likeCount","dislikeCount","stop","apply","this","arguments","Fragment","onClick","matches","Card","Collapse","in","Img","thumbnails","medium","url","ImgOverlay","Text","mountOnEnter","unmountOnExit","Footer","src_components_FeedModal","Feed","youtubeList","videos","map","resourceId","src_components_FeedItem","App","state","getVideos","uploads","mostRecentUploads","maxResults","sort","b","videoA","toUpperCase","videoB","_this","setState","src_components_Header","src_components_Feed","React","Component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","src_components_App","document","getElementById","URL","origin","addEventListener","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f09b6191.chunk.js","sourcesContent":["import React from 'react';\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport './MenuIcon.css';\n\nconst MenuIcon = () => {\n  return (\n    <button className=\"MenuIcon\">\n      <MenuRoundedIcon />\n    </button>\n  );\n};\n\nexport default MenuIcon;\n","import React from 'react';\nimport './Title.css';\n\nconst Title = () => {\n  return (\n    <a className=\"Title\" href=\"/lfc-feed\" target=\"_self\">\n      <span>LFC FEED</span>\n    </a>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport Switch from '@material-ui/core/Switch';\n\nconst ThemeSwitch = () => {\n  return <Switch />;\n};\n\nexport default ThemeSwitch;\n","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Header.css';\nimport MenuIcon from './MenuIcon';\nimport Title from './Title';\nimport ThemeSwitch from './ThemeSwitch';\n\nconst Header = () => {\n  return (\n    <header className=\"Header\">\n      <Container>\n        <MenuIcon />\n        <Title />\n        <ThemeSwitch />\n      </Container>\n    </header>\n  );\n};\n\nexport default Header;\n","import axios from 'axios';\n\nconst KEY = process.env.REACT_APP_YOUTUBE_KEY;\n\nexport default axios.create({\n  baseURL: 'https://www.googleapis.com/youtube/v3',\n  params: {\n    key: KEY\n  }\n});\n","import React from 'react';\nimport YouTubeIframe from 'youtube-iframe';\nimport { ResponsiveEmbed } from 'react-bootstrap';\n\ntype Props = { videoId: string };\n\nconst VideoEmbed = ({ videoId }: Props) => {\n  YouTubeIframe.load(function(YT) {\n    console.log(new YT.Player('player'));\n  });\n\n  return (\n    <ResponsiveEmbed className=\"VideoEmbed\" aspectRatio=\"16by9\">\n      <iframe\n        id=\"player\"\n        title=\"video player\"\n        src={`https://www.youtube.com/embed/${videoId}?modestbranding=1&rel=0&enablejsapi=1`}\n        allowFullScreen\n      ></iframe>\n    </ResponsiveEmbed>\n  );\n};\n\nexport default VideoEmbed;\n","import React from 'react';\nimport moment from 'moment';\nimport { ProgressBar } from 'react-bootstrap';\nimport './VideoInfo.css';\n\ntype Props = {\n  views: number;\n  likes: number;\n  dislikes: number;\n  video: any;\n};\n\nconst VideoInfo = ({ views, likes, dislikes, video }: Props) => {\n  const addCommas: (x: number) => string = (x: number) => {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  };\n\n  return (\n    <div className=\"VideoInfo\">\n      <h1>{video.snippet.title}</h1>\n      <ProgressBar\n        now={100 - likes / dislikes / 100}\n        title={`${addCommas(likes)} likes / ${addCommas(dislikes)} dislikes`}\n      ></ProgressBar>\n      <span>{addCommas(views)} views</span>\n      <time\n        dateTime={video.snippet.publishedAt}\n        title={moment(video.snippet.publishedAt).format('ll')}\n      >\n        {moment(video.snippet.publishedAt).fromNow()}\n      </time>\n    </div>\n  );\n};\n\nexport default VideoInfo;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport './FeedModal.css';\nimport VideoEmbed from './VideoEmbed';\nimport VideoInfo from './VideoInfo';\n\ntype Props = {\n  show: boolean;\n  onHide: () => void;\n  views: number;\n  likes: number;\n  dislikes: number;\n  video: any;\n  videoId: string;\n};\n\nconst FeedModal = ({\n  show,\n  onHide,\n  views,\n  likes,\n  dislikes,\n  video,\n  videoId\n}: Props) => {\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      dialogClassName=\"FeedModal\"\n      centered\n      restoreFocus\n    >\n      <Modal.Body>\n        <VideoEmbed videoId={videoId} />\n        <VideoInfo\n          views={views}\n          likes={likes}\n          dislikes={dislikes}\n          video={video}\n        />\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default FeedModal;\n","import React, { useState } from 'react';\nimport moment from 'moment';\nimport { Card, Collapse } from 'react-bootstrap';\nimport './FeedItem.css';\nimport youtube from '../api/youtube';\nimport VideoEmbed from './VideoEmbed';\nimport VideoInfo from './VideoInfo';\nimport FeedModal from './FeedModal';\n\ntype Props = { video: any; videoId: string };\n\nconst FeedItem = ({ video, videoId }: Props) => {\n  const [imageShow, setImageShow] = useState(true);\n  const [videoShow, setVideoShow] = useState(false);\n  const [modalShow, setModalShow] = useState(false);\n  const [views, setViews] = useState(0);\n  const [likes, setLikes] = useState(0);\n  const [dislikes, setDislikes] = useState(0);\n\n  const mql: MediaQueryList = window.matchMedia('(max-width: 575.98px)');\n\n  const getVideoStats: () => Promise<void> = async () => {\n    const response = await youtube.get('/videos', {\n      params: {\n        playlistId: 'UU9LQwHZoucFT94I2h6JOcjw',\n        part: 'statistics',\n        id: videoId\n      }\n    });\n\n    setViews(response.data.items[0].statistics.viewCount);\n    setLikes(response.data.items[0].statistics.likeCount);\n    setDislikes(response.data.items[0].statistics.dislikeCount);\n  };\n\n  const handleClick: () => void = () => {\n    if (mql.matches) {\n      // the viewport is 575.98 pixels wide or less\n      if (imageShow) {\n        getVideoStats();\n        setImageShow(false);\n        setVideoShow(true);\n      } else {\n        setVideoShow(false);\n        setImageShow(true);\n      }\n    } else {\n      // the viewport is more than 575.98 pixels wide\n      getVideoStats();\n      setModalShow(true);\n    }\n  };\n\n  return (\n    <>\n      <button className=\"FeedItem\" onClick={handleClick}>\n        <Card>\n          <Collapse in={imageShow}>\n            <div>\n              <Card.Img\n                src={video.snippet.thumbnails.medium.url}\n                title={video.snippet.title}\n              />\n              <Card.ImgOverlay>\n                <Card.Text>{video.snippet.title}</Card.Text>\n              </Card.ImgOverlay>\n            </div>\n          </Collapse>\n          <Collapse in={videoShow} mountOnEnter={true} unmountOnExit={true}>\n            <div>\n              <VideoEmbed videoId={videoId} />\n              <VideoInfo\n                views={views}\n                likes={likes}\n                dislikes={dislikes}\n                video={video}\n              />\n            </div>\n          </Collapse>\n          <Collapse in={imageShow}>\n            <div>\n              <Card.Footer>\n                <time\n                  dateTime={video.snippet.publishedAt}\n                  title={moment(video.snippet.publishedAt).format('ll')}\n                >\n                  {moment(video.snippet.publishedAt).fromNow()}\n                </time>\n              </Card.Footer>\n            </div>\n          </Collapse>\n        </Card>\n      </button>\n\n      <FeedModal\n        show={modalShow}\n        onHide={(): void => {\n          setModalShow(false);\n        }}\n        views={views}\n        likes={likes}\n        dislikes={dislikes}\n        video={video}\n        videoId={videoId}\n      />\n    </>\n  );\n};\n\nexport default FeedItem;\n","import React from 'react';\nimport './Feed.css';\nimport FeedItem from './FeedItem';\n\ntype Props = { videos: object[] };\n\nconst Feed = ({ videos }: Props) => {\n  const youtubeList: JSX.Element[] = videos.map((video: any) => {\n    const id: string = video.snippet.resourceId.videoId;\n\n    return <FeedItem video={video} videoId={id} key={id} />;\n  });\n\n  return <div className=\"Feed\">{youtubeList}</div>;\n};\n\nexport default Feed;\n","import React from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Feed from './Feed';\nimport youtube from '../api/youtube';\n\ntype State = {\n  videos: object[];\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    videos: []\n  };\n\n  componentDidMount() {\n    this.getVideos();\n  }\n\n  getVideos = async () => {\n    const response: any = await youtube.get('/playlistItems', {\n      params: {\n        playlistId: 'UU9LQwHZoucFT94I2h6JOcjw',\n        part: 'snippet',\n        maxResults: 30\n      }\n    });\n\n    const uploads: object[] = response.data.items;\n\n    const mostRecentUploads: object[] = uploads.sort((a: any, b: any) => {\n      const videoA = a.snippet.publishedAt.toUpperCase();\n      const videoB = b.snippet.publishedAt.toUpperCase();\n\n      if (videoA > videoB) {\n        return -1;\n      }\n\n      if (videoA < videoB) {\n        return 1;\n      }\n\n      return 0;\n    });\n\n    console.log('get videos');\n\n    this.setState({ videos: mostRecentUploads });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Feed videos={this.state.videos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './custom.scss';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.register();\n"],"sourceRoot":""}